#!/usr/bin/env python3

import os.path as op


def hex2rgb(clr_hex: str) -> tuple:
    red = int(clr_hex[1:3], 16)
    green = int(clr_hex[2:4], 16)
    blue = int(clr_hex[3:5], 16)

    return (red, green, blue)


def main():
    usr_dir = op.expanduser("~")
    wal_dir = ".cache/hellwal"
    clr_file = open(op.join(usr_dir, wal_dir, "colors")).readlines()

    clr_parse = [hex2rgb(x.strip()) for x in clr_file if x != "\n"]

    template = """# Generated by a Custom Script

background-r=bg-r
background-g=bg-g
background-b=bg-b

foreground-r=fg-r
foreground-g=fg-g
foreground-b=fg-b

cursor-r=cr-r
cursor-g=cr-g
cursor-b=cr-b

border-r=br-r
border-g=br-g
border-b=br-b

color0-r=c0-r
color0-g=c0-g
color0-b=c0-b

color1-r=c1-r
color1-g=c1-g
color1-b=c1-b

color2-r=c2-r
color2-g=c2-g
color2-b=c2-b

color3-r=c3-r
color3-g=c3-g
color3-b=c3-b

color4-r=c4-r
color4-g=c4-g
color4-b=c4-b

color5-r=c5-r
color5-g=c5-g
color5-b=c5-b

color6-r=c6-r
color6-g=c6-g
color6-b=c6-b

color7-r=c7-r
color7-g=c7-g
color7-b=c7-b

color8-r=c8-r
color8-g=c8-g
color8-b=c8-b

color9-r=c9-r
color9-g=c9-g
color9-b=c9-b

color10-r=c10-r
color10-g=c10-g
color10-b=c10-b

color11-r=c11-r
color11-g=c11-g
color11-b=c11-b

color12-r=c12-r
color12-g=c12-g
color12-b=c12-b

color13-r=c13-r
color13-g=c13-g
color13-b=c13-b

color14-r=c14-r
color14-g=c14-g
color14-b=c14-b

color15-r=c15-r
color15-g=c15-g
color15-b=c15-b"""

    colors = {
        "bg-r": clr_parse[0][0],
        "bg-g": clr_parse[0][1],
        "bg-b": clr_parse[0][2],
        "fg-r": clr_parse[1][0],
        "fg-g": clr_parse[1][1],
        "fg-b": clr_parse[1][2],
        "cr-r": clr_parse[2][0],
        "cr-g": clr_parse[2][1],
        "cr-b": clr_parse[2][2],
        "br-r": clr_parse[3][0],
        "br-g": clr_parse[3][1],
        "br-b": clr_parse[3][2],
    }

    for c, i in enumerate(clr_parse[4:]):
        colors[f"c{c}-r"] = i[0]
        colors[f"c{c}-g"] = i[1]
        colors[f"c{c}-b"] = i[2]

    for k, v in colors.items():
        template = template.replace(k, str(v))

    ret_file = open(op.join(usr_dir, wal_dir, "ansi-colors-rgb-separate.sh"), "w")
    ret_file.write(template)
    ret_file.close()

    return


if __name__ == "__main__":
    main()
